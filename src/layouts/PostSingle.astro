---
import { Image } from "astro:assets";
import Share from "@layouts/components/basic/Share.astro";
import SimilarPosts from "@layouts/components/post/SimilarPosts.astro";
import dateFormat from "@lib/utils/dateFormat";
import similerItems from "@lib/utils/similarItems";
import { humanize, markdownify, slugify } from "@lib/utils/textConverter";
import { BiCalendarEdit, BiCategoryAlt } from "react-icons/bi/index.js";
import { getCollection, type CollectionEntry } from "astro:content";
import MyAvatar from "./components/special/MyAvatar.astro";
import Tags from "./components/basic/Tags.astro";

interface Props {
  post: CollectionEntry<"posts">;
}

const posts = await getCollection("posts");
const { post } = Astro.props;
const similarPosts = similerItems(post, posts, post.slug);
const { Content } = await post.render();
const { title, description, categories, image, date, tags } = post.data;
---

<section class="section mb-0">
  <div class="large-container" style={{ viewTransitionName: "player" }}>
    <article class="col justify-center">
      <div class="md:col-12 text-center">
        <h1 set:html={markdownify(title)} class="h2" />
        <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
          <li class="mx-3">
            <MyAvatar />
          </li>
          <li class="mx-3 flex items-center flex-wrap font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            <>{dateFormat(date || new Date())}</>
          </li>
          <li class="mx-3 flex items-center flex-wrap">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
            <>
              <ul>
                {
                  categories.map((category: string, i: number) => (
                    <li class="inline-block">
                      <a
                        href={`/categories/${slugify(category)}`}
                        class="mr-2 hover:text-primary font-medium"
                      >
                        {humanize(category)}
                        {i !== post.data.categories.length - 1 && ","}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </>
          </li>
        </ul>
      </div>

      <div class="col-8 mt-8 mb-2 mx-auto">
        {
          image && (
            <Image
              src={image}
              height={400}
              width={1300}
              alt={title}
              class="rounded-lg"
              transition:name={`posts-image-${post.id}`}
            />
          )
        }
      </div>

      <div class="md:col-12">
        <div class="content mb-16 text-left align-middle justify-center">
          <Content />
        </div>
      </div>
      <div class="flex flex-wrap justify-between col-8 mx-auto items-center">
        <Tags tags={tags} counts />
        <Share
          className="social-share"
          title={title}
          description={description}
          slug={post.slug}
        />
      </div>
    </article>
  </div>
</section>

<!-- similar posts -->
{
  similarPosts.length > 0 && (
    <section class="section pt-0">
      <div class="container">
        <h2 class="mb-8 text-center h3">Similar Posts</h2>
        <SimilarPosts posts={similarPosts.slice(0, 3)} />
      </div>
    </section>
  )
}
